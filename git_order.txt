1. git 关联远程库，使用命令 git remote add origin git@server-name:path/repo-name.git;

2. 使用 git push -u origin master 第一次推送master所有内容

3. 这样以后就可以使用  git push  origin master 提交修改

4. 初始化一个Git仓库，使用git init命令。

	添加文件到Git仓库，分两步：

		第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

		第二步，使用命令git commit -m "描述"，完成。

	add后添加到了存储区，commit才会被提交，如果add后还对文件进行了修改，commit只会提交第一次修改的

	内容而不会修改第二次的内容，git diff HEAD -- readme.txt可以查看工作区和版本库的区别

5. git log 可以查看版本库的历史记录，git log命令显示从最近到最远的提交日志，我们可以看到3次提交，

 	最近的一次是append GPL，上一次是add distributed，最早的一次是wrote a readme file。

6. git reset --hard commit_id 可以将版本会退到某个版本，如 git reset --hard 3628164，

7. git reflog 可以记录你的每一次指令

8.命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

		一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

		一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

	gitcheckout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”

9. 	查看分支：git branch

	创建分支：git branch <name>

	切换分支：git checkout <name>

	创建+切换分支：git checkout -b <name>

	合并某分支到当前分支：git merge <name>

	删除分支：git branch -d <name>

	查看分支合并情况：git log --graph --pretty=oneline --abbrev-commit

10. git stash 将当前未完成的工作暂存（比如当前工作未做完，需要提前修改一个bug，并且还不能add时，

	也就不能切换分区了，如果已经 add那就说明可以直接切换分支，而不需要暂存了）
	
	git stash list 查看被隐藏暂存的工作区

	两种恢复隐藏工作区的方法：

		一是用git stash apply恢复，但是恢复后，stash内容并不删除， 你需要用git stash drop来删除；

		另一种方式是用git stash pop，恢复的同时把stash内容也删了： 

	你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：

	git stash apply stash@{0}

11. git 的多人协作：

	查看远程库信息，使用git remote -v；

	本地新建的分支如果不推送到远程，对其他人就是不可见的；

	从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

	在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name， 本地和远程分支的名称最好一致；

	建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

	从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。

12. git 的标签创建

	命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id；

	git tag -a <tagname> -m "blablabla..."可以指定标签信息；

	git tag -s <tagname> -m "blablabla..."可以用PGP签名标签；

	命令git tag可以查看所有标签。

	命令git push origin <tagname>可以推送一个本地标签；

	命令git push origin --tags可以推送全部未推送过的本地标签；

	命令git tag -d <tagname>可以删除一个本地标签；

	命令git push origin :refs/tags/<tagname>可以删除一个远程标签。

13. 忽略特殊文件：	
	
	忽略某些文件时，需要编写.gitignore；

	.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！
